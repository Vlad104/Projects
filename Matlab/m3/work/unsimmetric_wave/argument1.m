function arg = argument1(BufferFFTw1, BufferFFTw2, energy, EQ64, EQ256)
% функция расчета угла для каждой точки матрицы
%	функция пороговой фильтрации входной матрицы
%   вход:
%       - BufferFFTw1 и BufferFFTw2 - матрицы EQ64хEQ256 комплексных чисел
%       - energy - матрица EQ64хEQ256 значений мощности в точках, со
%         значением выше порога и 0 в точках ниже порога
%       - EQ256 и EQ64 - эквиваленты чисел 256 и 64 соответственног
%   выход:
%       - arg - угол, в каждой точке

    %инициализация переменных
    %arg(1:EQ64,1:EQ256) = 0;  % создание массива с нулями 
    %fi_d(1:EQ64,1:EQ64) = 0; 
    %G1(1:EQ64,1:EQ64) = 0; 
    %Q1(1:EQ64,1:EQ64) = 0; 
    %G2(1:EQ64,1:EQ64) = 0; 
    %Q2(1:EQ64,1:EQ64) = 0;
    B1 = BufferFFTw1';
    B2 = BufferFFTw2';
    
    for i = 0:EQ64-1
        for j=0:EQ64-1
            fi_d(i+1,j+1) = 2*pi*i*j/EQ64;
        end;
    end;
    
    for i=0:1:EQ256-1
        for j=0:1:EQ64-1
            for n=0:1:EQ64-1
                G1(i+1,j+1)=sum((real(B1(i+1,n+1))*cos(fi_d(n+1,j+1)))-(imag(B1(i+1,n+1))*sin(fi_d(n+1,j+1))));%первая квадратура доплеровского канала
                Q1(i+1,j+1)=sum((real(B1(i+1,n+1))*sin(fi_d(n+1,j+1)))+(imag(B1(i+1,n+1))*cos(fi_d(n+1,j+1))));%вторая квадратура доплеровского канала
                SR1(i+1,j+1)=(sqrt( (G1(i+1,j+1))^2 + (Q1(i+1,j+1))^2) );
            end
        end
    end
 
    for i=0:1:EQ256-1
        for j=0:1:EQ64-1
            for n=0:1:EQ64-1
                G2(i+1,j+1)=sum((real(B2(i+1,n+1))*cos(fi_d(n+1,j+1)))-(imag(B2(i+1,n+1))*sin(fi_d(n+1,j+1))));%первая квадратура доплеровского канала
                Q2(i+1,j+1)=sum((real(B2(i+1,n+1))*sin(fi_d(n+1,j+1)))+(imag(B2(i+1,n+1))*cos(fi_d(n+1,j+1))));%вторая квадратура доплеровского канала
                SR2(i+1,j+1)=(sqrt( (G2(i+1,j+1))^2 + (Q2(i+1,j+1))^2) );
            end
        end
    end  
    l = sqrt(-1);
    for i=0:1:EQ256-1
        for j=0:1:EQ64-1
            arg(i+1,j+1)=imag((G2(i+1,j+1)+l*Q2(i+1,j+1)-(G1(i+1,j+1)+l*Q1(i+1,j+1)))/(G2(i+1,j+1)+l*Q2(i+1,j+1)+(G1(i+1,j+1)+l*Q1(i+1,j+1))));
        end
    end   
    arg = arg';
end