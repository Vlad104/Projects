    clear
    EQ64 = 64; 
    EQ256 = 400; 
    %инициализация матриц
    ZOND_SIN(1:25000,1:64) = 0;     %зондирующий сигнал
    ZOND_COS(1:25000,1:64) = 0;     %зондирующий сигнал
    S1_RX(1:25000,1:64) = 0;    %сигнал, принятый первой антенной
    S2_RX(1:25000,1:64) = 0;    %сигнал, принятый втрой антенной
    S1_SM(1:25000,1:64) = 0;    %сигнал на выходе смесителя 1
    S2_SM(1:25000,1:64) = 0;    %сигнал на выходе смесителя 2
    S1_LPF(1:25000,1:64) = 0;    %сигнал на выходе смесителя 1
    S2_LPF(1:25000,1:64) = 0;    %сигнал на выходе смесителя 2
    S1(1:256,1:64) = 0;         %сигнал 1 после АЦП
    S2(1:256,1:64) = 0;         %сигнал 2 после АЦП

    c = 3*10^8; %скорость света
    B = 50*10^6; %полоса модуляции в Гц
    fm = 8*10^3; %частота повторения пилы в Гц    
    %tau0 = 1300*10^-9; %задержка сигнала до максимальной дальности в м
    f0 = 24e9; %несущая частота
    
    Tm = 1/fm; %период повторения пилы
    Rd = c/(2*B); %разрешение по дальности
    Vd = (fm*c)/(2*EQ64*f0);  %разрешение по скорости
    fb_max = (2*Rd*EQ256/c)*B/Tm; %дальностная частота до максимальной дистанции
    kk = 5*10^-9; %специальный коэффициент
    I = Tm/kk; %количество отсчетов в одном периоде пилы
    
    %Модель сигнала
    b = B/Tm; %коэффициент ЛЧМ
    FF = EQ64; %количество накапливаемых периодов
    mu=0; %мат.ожидание
    sigma=0.1; %СКО
    
    % Для задания требуемого числа целей нужно изменять переменную N.
    % (Пример: N = 3; - 3 цели).
    % Для каждой цели прописать параметры аналогично коду из рамки Цель1,
    % заменяя индексы в скобках номером цели
    
    N = 1; %кол-во целей
    %Инициализация массивов нулями для ускорения расчетов
    fd(1:N) = 0; 
    R(1:N) = 0; 
    tau(1:N) = 0; 
    fb(1:N) = 0; 
    J(1:N) = 0;
    phi_grad(1:N) = 0;
    phi(1:N) = 0;
    dphase(1:N) = 0;
    
    % ЦЕЛЬ 1. Параметры начало
    V(1) = -4*Vd; % скорость цели, м/с
    R(1) = 130; %дальность до цели, м
    phi_grad(1) = 45; %угол пеленга в градусах
    % ЦЕЛЬ 1. Параметры конец
    
%     % ЦЕЛЬ 2. Параметры начало
%     V(2) = 3*Vd; % скорость цели, м/с
%     R(2) = 200; %дальность до цели, м
%     phi_grad(2) = 15; %угол пеленга в градусах
%     % ЦЕЛЬ 2. Параметры конец
    
    % расчет дополнительных параметров для каждой цели
    for z = 1:1:N
        phi(z) = phi_grad(z)*pi/180; %угол пеленга в радианах
        fd(z) = V(z)*f0*2/c; % частота Доплера  
        tau(z) = 2*R(z)/c; % время задержки до цели
        J(z) = tau(z)/kk; %задержка в осчетах модели
        fb(z) = B*tau(z)/Tm; %дальностная частота до максимальной дистанции
        dphase(z) = pi*sin(phi(z));
    end;
    
    %Зондирующий сигнал
    for i=0:1:I-1
        for j = 0:1:FF-1
            freq = 2*pi*kk*i*f0 + pi*b*(i*kk)^2;
            ZOND_SIN(i+1,j+1) = sin(freq); %модель зондирующего сигнала  
            ZOND_COS(i+1,j+1) = cos(freq); %модель зондирующего сигнала       
        end;
    end;  
       
    %Сигналы, принятые антенной
    for i=0:1:I-1
        for j = 0:1:FF-1
            for z = 1:1:N
                freq = 2*pi*(i+J(z))*kk*f0 + pi*b*((i+J(z))*kk)^2 + 2*pi*fd(z)*j*Tm;
                S1_RX(i+1,j+1) = S1_RX(i+1,j+1) + sin(freq +     0     + (mu+sigma.*randn(1,1))) + (mu+sigma.*randn(1,1));
                S2_RX(i+1,j+1) = S1_RX(i+1,j+1) + sin(freq + dphase(z) + (mu+sigma.*randn(1,1))) + (mu+sigma.*randn(1,1));
            end;
        end;
    end;
    VV = 0;        
            
    %Сигналы на выходе смесителя
    for i=0:1:I-1
        for j = 0:1:FF-1
            S1_SM_SIN = ZOND_SIN(i+1,j+1)*S1_RX(i+1,j+1);
            S1_SM_COS = ZOND_COS(i+1,j+1)*S1_RX(i+1,j+1);
            
            S2_SM_SIN = ZOND_SIN(i+1,j+1)*S2_RX(i+1,j+1);
            S2_SM_COS = ZOND_COS(i+1,j+1)*S2_RX(i+1,j+1);
            
            S1_SM(i+1,j+1) = S1_SM_SIN; 
            S1_SM(i+1,j+1) = S2_SM_SIN; 
           
            %S1_SM(i+1,j+1) = sqrt( (S1_SM_SIN)^2 + (S1_SM_COS)^2 ); 
            %S2_SM(i+1,j+1) = sqrt( (S2_SM_SIN)^2 + (S2_SM_COS)^2 );
        end;
    end; 
    
    %ФНЧ
    [a,b] = butter(1, fb_max/I, 'low');
    for i = 0:1:I-1
        S1_LPF = filter(a,b,S1_SM);
        S2_LPF = filter(a,b,S2_SM);
    end;
    
   S1 = S1_LPF(1:25000/256:25000,1:64);
   S2 = S2_LPF(1:25000/256:25000,1:64);