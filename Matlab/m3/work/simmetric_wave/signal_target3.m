function [S, Rd] = signal_target1(EQ64, EQ256)
    c = 3*10^8; %скорость света
    B = 150*10^6; %полоса модуляции в Гц
    fm = 1*10^3; %частота повторения пилы в Гц    
    tau = 1300*10^-9; %задержка сигнала до максимальной дальности в м
    f0 = 24e9; %несущая частота
    
    Tm = 1/fm; %период повторения пилы
    fb = B*tau/Tm; %дальностная частота до максимальной дистанции
    Rd = c/(2*B); %разрешение по дальности
    Vd = (fm*c)/(2*EQ64*f0);  %разрешение по скорости
    kk = 5*10^-9;
    I = Tm/kk; %количество отсчетов в одном периоде пилы
    
    % ЦЕЛЬ 1
    fd1 = 2000; %частота доплера    
    R1 = 100; %дальность до цели
    tau1 = 2*R1/c; %
    fb1 = B*tau1/Tm; %
    J1 = tau1/kk; %задержка в осчетах модели
    
    % ЦЕЛЬ 2
    fd2 = 3000; %частота доплера    
    R2 = 200; %дальность до цели
    tau2 = 2*R2/c; %
    fb2 = B*tau2/Tm; %
    J2 = tau2/kk; %задержка в осчетах модели
    
    % ЦЕЛЬ 3
    fd3 = -3000; %частота доплера    
    R3 = 300; %дальность до цели
    tau3 = 2*R3/c; %
    fb3 = B*tau3/Tm; %
    J3 = tau3/kk; %задержка в осчетах модели

    %Модель зондирующих сигналов
    b = B/Tm; %коэффициент ЛЧМ
    FF = EQ64; %количество накапливаемых периодов
    fi=pi*15/180;
    l=sqrt(-1);    
    for i=0:1:I/2-1 %нарастание
        ZOND_1(i+1) = exp( fi*l)*sin(2*pi*kk*i*f0 + pi*b*(i*kk)^2); %модель зондирующего сигнала 
        ZOND_2(i+1) = exp(-fi*l)*sin(2*pi*(kk*i+Tm)*f0 + pi*b*(i*kk+Tm)^2); %модель зондирующего сигнала
    end;    
    for i=I/2:1:I-1
        j = I-i;
        ZOND_1(i+1) = exp( fi*l)*sin(-2*pi*kk*j*f0 - pi*b*(j*kk)^2); %модель зондирующего сигнала 
        ZOND_2(i+1) = exp(-fi*l)*sin(-2*pi*(kk*j+Tm)*f0 - pi*b*(j*kk+Tm)^2); %модель зондирующего сигнала
    end;            %спад
    %модель принятых сигналов
    mu=0; %мат.ожидание
    sigma=0.1; %СКО
    RAND=(mu+sigma.*randn(1,1));
    fi1=pi*5/180;
    fi2=pi*25/180;
    % принятый первый зондирующий сигнал
    for i=0:1:I/2-1 %нарастание
        freq = 2*pi*kk*(i+J1)*f0 + pi*b*((i+J1)*kk)^2; %+ 2*pi*fd1*Tm;    %Цель1      
        freq = 2*pi*kk*(i+J2)*f0 + pi*b*((i+J2)*kk)^2; %+ 2*pi*fd2*Tm;    %Цель2           
        freq = 2*pi*kk*(i+J3)*f0 + pi*b*((i+J3)*kk)^2; %+ 2*pi*fd3*Tm;    %Цель3   
        S11_RX(i+1) = exp( fi2*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 1 антенне
        S12_RX(i+1) = exp( fi1*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 2 антенне
        S13_RX(i+1) = exp(-fi1*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 3 антенне 
        S14_RX(i+1) = exp(-fi2*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 4 антенне
    end;             %спад
    for i=I/2:1:I-1
        j = I-i;
        freq = - 2*pi*kk*(j+J1)*f0 - pi*b*((j+J1)*kk)^2; %+ 2*pi*fd1*Tm;    %Цель1      
        freq = - 2*pi*kk*(j+J2)*f0 - pi*b*((j+J2)*kk)^2; %+ 2*pi*fd2*Tm;    %Цель2           
        freq = - 2*pi*kk*(j+J3)*f0 - pi*b*((j+J3)*kk)^2; %+ 2*pi*fd3*Tm;    %Цель3
        S11_RX(i+1) = exp( fi2*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 1 антенне
        S12_RX(i+1) = exp( fi1*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 2 антенне
        S13_RX(i+1) = exp(-fi1*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 3 антенне 
        S14_RX(i+1) = exp(-fi2*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 4 антенне
    end;
    % принятый второй зондирующий сигнал
    for i=0:1:I/2-1 %нарастание
        freq = 2*pi*(kk*(i+J1)+Tm)*f0 + pi*b*((i+J1)*kk+Tm)^2; %+ 2*pi*fd1*Tm;
        S21_RX(i+1) = exp( fi2*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 1 антенне
        S22_RX(i+1) = exp( fi1*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 2 антенне
        S23_RX(i+1) = exp(-fi1*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 3 антенне 
        S24_RX(i+1) = exp(-fi2*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 4 антенне
    end;             %спад
    for i=I/2:1:I-1
        freq = - 2*pi*(kk*(i+J1)+Tm)*f0 - pi*b*((i+J1)*kk+Tm)^2; %+ 2*pi*fd1*Tm;
        S21_RX(i+1) = exp( fi2*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 1 антенне
        S22_RX(i+1) = exp( fi1*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 2 антенне
        S23_RX(i+1) = exp(-fi1*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 3 антенне 
        S24_RX(i+1) = exp(-fi2*l)*sin(freq + (mu+sigma.*randn(1,1))) + RAND; %модель сигнала на 4 антенне
    end;
    
    %сигнал на выходе смесителя
    for i=0:1:I-1
        S_SM(i+1,1) = ZOND_1(i+1)*S11_RX(i+1); %модель сигнала с выхода смесителя
        S_SM(i+1,2) = ZOND_1(i+1)*S12_RX(i+1); %модель сигнала с выхода смесителя
        S_SM(i+1,3) = ZOND_1(i+1)*S13_RX(i+1); %модель сигнала с выхода смесителя
        S_SM(i+1,4) = ZOND_1(i+1)*S14_RX(i+1); %модель сигнала с выхода смесителя
        S_SM(i+1,5) = ZOND_2(i+1)*S21_RX(i+1); %модель сигнала с выхода смесителя
        S_SM(i+1,6) = ZOND_2(i+1)*S22_RX(i+1); %модель сигнала с выхода смесителя
        S_SM(i+1,7) = ZOND_2(i+1)*S23_RX(i+1); %модель сигнала с выхода смесителя
        S_SM(i+1,8) = ZOND_2(i+1)*S24_RX(i+1); %модель сигнала с выхода смесителя
    end;

    rsm_p = 2; % нужно для преобразования сигнала в EQ256 отсчетов
    rsm_q = double(int16(rsm_p*size(S_SM,1)/EQ256));
    for i = 1:1:8
        S(:,i) = resample(S_SM(:,i), rsm_p, rsm_q);
    end;
    while (size(S,1) > EQ256) % если пересчет дал больше 256 точек
    	S(size(S,1),:) = []; %модель сигнала после АЦП
    end;   
end